//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/
//! @file   GameMain.cpp
//!
//! @brief  ゲーム関連のソースファイル
//!
//! @date   2018/07/18
//!
//! @author GF1 26 山口 寛雅
//__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/__/

// ヘッダファイルの読み込み ================================================
#include "GameMain.h"
#include "BufferedConsole.h"




// 定数の定義 ==============================================================




// グローバル変数の定義 ====================================================
SHORT g_pos_x;
SHORT g_pos_y;



// 関数の宣言 ==============================================================

void InitializeGame(void);  // ゲームの初期化処理
void UpdateGame(void);      // ゲームの更新処理
void RenderGame(void);      // ゲームの描画処理
void FinalizeGame(void);    // ゲームの終了処理




// 関数の定義 ==============================================================

//----------------------------------------------------------------------
//! @brief ゲームの初期化処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void InitializeGame(void)
{
	g_pos_x = SCREEN_CENTER_X;
	g_pos_y = SCREEN_CENTER_Y;
}



//----------------------------------------------------------------------
//! @brief ゲームの更新処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void UpdateGame(void)
{
	if (current_key == KEY_LEFT)
		g_pos_x += -1;
	if (current_key == KEY_RIGHT)
		g_pos_x += 1;
	if (current_key == KEY_UP)
		g_pos_y += -1;
	if (current_key == KEY_DOWN)
		g_pos_y += 1;
}




//----------------------------------------------------------------------
//! @brief ゲームの描画処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void RenderGame(void)
{
	Print({ g_pos_x, g_pos_y }, DEFAULT_ATTRIBUTES, "abcdefg\nhijklmn\ndkuyrgca\nauycgfbag");
	Print({ 12, 22 }, DEFAULT_ATTRIBUTES, "↑↓←→キーで操作");
}



//----------------------------------------------------------------------
//! @brief ゲームの終了処理
//!
//! @param[in] なし
//!
//! @return なし
//----------------------------------------------------------------------
void FinalizeGame(void)
{

}
